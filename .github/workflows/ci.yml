name: "Test"
on:
  pull_request:
  push:
  schedule:
    # every sunday morning
    - cron: "0 0 * * 0"
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
      fail-fast: false
    steps:
    - name: Checkout lilgit
      uses: actions/checkout@v2
      with:
        path: lilgit
    - uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
        extra_nix_config: |
          system-features = nixos-test benchmark big-parallel kvm
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: DeterminateSystems/magic-nix-cache-action@v1
    - run: nix-build lilgit/default.nix
  demo:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
      fail-fast: false
    steps:
    - uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
        extra_nix_config: |
          system-features = nixos-test benchmark big-parallel kvm
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: DeterminateSystems/magic-nix-cache-action@v1
    - name: Test flake-based demo
      run: echo true | nix develop github:abathur/lilgit
    - name: Test traditional demo
      run: echo true | nix-shell -E 'import (fetchGit { url="https://github.com/abathur/lilgit"; rev="'${GITHUB_SHA}'"; allRefs = true; } + "/shell.nix")'
  # macOS only because it depends on bsd 'footprint' for
  # easy measuring of RAM footprint...
  performance:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest ]
      fail-fast: false
    steps:
    - name: Checkout lilgit
      uses: actions/checkout@v2
      with:
        path: lilgit
    - name: Checkout nixpkgs
      uses: actions/checkout@v2
      with:
        repository: nixos/nixpkgs
        path: nixpkgs
        fetch-depth: 0
    - uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
        extra_nix_config: |
          system-features = nixos-test benchmark big-parallel kvm
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: DeterminateSystems/magic-nix-cache-action@v1
    - name: benchmark
      run: nix-build lilgit/ci.nix --option sandbox false
      timeout-minutes: 40
      continue-on-error: true
